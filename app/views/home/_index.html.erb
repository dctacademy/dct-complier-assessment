<div class="col-md-12">
  <div class="row">
    <div >
      <div class="form-inline">
        <div class="form-group">
          <label> Select Language </label>
          <select class="form-control" name="language" id="sel">
            <% @practice.assignment_group.tag_list.each do |lang| %>
              <option value="<%= lang %>"><%= lang %></option>
             <% end %>
          </select>
        </div>
      
        <div class="form-group pull-right">
          <% themes = [{"3024-day": "3024 Day"}]%>
          <label> Select Theme </label>
          <select class="form-control" id="theme">
            <option value="">Default</option>
            <option value="3024-day">3024 Day</option>
            <option value="3024-night">3024 Night</option>
            <option value="abcdef">ABCDEF</option>
            <option value="ambiance-mobile">Ambiance Mobile</option>
            <option value="ambiance">Ambiance</option>
            <option value="base16-dark">Base16 Dark</option>
            <option value="base16-light">Base16 Light</option>
            <option value="bespin">Bespin</option>
            <option value="blackboard">Blackboard</option>
            <option value="cobalt">Cobalt</option>
            <option value="colorforth">Colorforth</option>
            <option value="dracula">Dracula</option>
            <option value="duotone-dark">Duotone Dark</option>
            <option value="duotone-light">Duotone Light</option>
            <option value="eclipse">Eclipse</option>
            <option value="elegant">Elegant</option>
            <option value="erlang-dark">Erlang Dark</option>
            <option value="hopscotch">Hopscotch</option>
            <option value="icecoder">Icecoder</option>
            <option value="isotope">Isotope</option>
            <option value="lesser-dark">Lesser Dark</option>
            <option value="liquibyte">Liquibyte</option>
            <option value="material">Material</option>
            <option value="mbo">Mbo</option>
            <option value="mdn-like">Mdn Like</option>
            <option value="midnight">Midnight</option>
            <option value="monokai">Monokai</option>
            <option value="neat">Neat</option>
            <option value="neo">Neo</option>
            <option value="night">Night</option>
            <option value="panda-syntax">Panda Syntax</option>
            <option value="paraiso-dark">Paraiso Dark</option>
            <option value="paraiso-light">Paraiso Light</option>
            <option value="pastel-on-dark">Pastel on Dark</option
              >
            <option value="railscasts">Railscasts</option>
            <option value="rubyblue">Rubyblue</option>
            <option value="seti">Seti</option>
            <option value="solarized">Solarized</option>
            <option value="the-matrix">The Matrix</option>
            <option value="tomorrow-night-bright">Tomorrow Night 
            Bright</option>
            <option value="tomorrow-night-eighties">Tomorrow Night Eighties</option>
            <option value="ttcn">Ttcn</option>
            <option value="twilight">Twilight</option>
            <option value="vibrant-ink">Vibrant Ink</option>
            <option value="xq-light">XQ Light</option>
            <option value="xq-dark">XQ Dark</option>
            <option value="yeti">Yeti</option>
            <option value="zenburn">Zenburn</option>
          </select>
        </div>
      </div>
      <br/>

      <div class="row">
          <div class="col-md-12">
            <!-- text -->
            <div id="text" class="padding-bottom"></div>
            <button type="button" name="execute" id="load" class="btn btn-primary">Execute</button>
            <button type="button" name="reset" id="reset" class="btn btn-danger">Reset</button>
              <% if (@practice.assignment_group.due_datetime >= Time.now) && !(@practice.submissions.where('user_id = ?', current_user.id).count > 0)%>
              
                <button type="button" name="submit" class="btn btn-success" id="sub">Submit</button>

              <% end %>                
              <span class="alert alert-danger pull-right"><b> Note - Assignment can be submitted only once </b></span>

          </div>
        </div>
      </div>
  </div>

    <div  id="para">
      <h2>Output</h2>
      <div id="result" class="padding-bottom"></div>
    </div>

</div>


<script type="text/javascript">
  var editor;
  $(document).ready(function(){
  
  // theme selection
    var themeThat;
    $('#theme')[0].addEventListener('change',function(){
      themeThat = this;
      editor.setOption('theme', $(this).val());
      $('<link>',{
        rel: 'stylesheet',
        href: '/stylesheets/' + $(this).val() + '.css',
       }).appendTo($('body'));

    $.ajax({
      <% if current_user.editor_setting.nil? %>
        url: '/editor_settings',
        type: 'POST',
      <% else %>
        url: '/editor_settings/<%= current_user.editor_setting.id%>',
        type: 'PATCH',
      <% end %>
        data: {
          editor_setting: {
           theme_name: $('#theme :selected')[0].text ,
           theme_css: $('#theme :selected')[0].value
          }
        }
    });

    }, false);


  //this is compiler code
  var flag = true;
  var lang = $("#sel option:first").val();
  var web = "/submissions/"
  var js = jcode = "//type js code here";
  var pythoncon = pcode = "#type python code here";
  var rubycon = rcode = "#type ruby code here";
  var j = 1;
  var rid = 0;
  var jsid = 0;
  var pid = 0;
  check(lang);
  editor = CodeMirror(document.getElementById('text'),{
    value: "#type code here",
    mode: "ruby",
    lineNumbers: true,
    keyMap: "sublime",
    tabSize: 2,
    indentUnit: 2,
    smartIndent: true,
    indentWithTabs: true,
    tabIndex: 2,
    lint: true,
    gutters: ["CodeMirror-lint-markers"],
    extraKeys: {
        "F11": function(cm) {
          cm.setOption("fullScreen", !cm.getOption("fullScreen"));
        },
        "Esc": function(cm) {
          if (cm.getOption("fullScreen")) cm.setOption("fullScreen", false);
        }
      }
  });

  var result = CodeMirror(document.getElementById('result'),{
    value: "Your result appears here",
    mode: "text",
    keyMap: "sublime",
    tabSize: 2,
    tabIndex: 2,
    readOnly: "nocursor"
  });

    $("#sel").on('change',function(){
      flag = true;
      lang = this.value;
      check(lang);
    });

    function check(lang){
      $.ajax({
        url: "<%= home_check_submission_path %>",
        type: "get",
        data: {
          uid: "<%= current_user.id %>",
          aid: "<%= @assignment.id %>",
          prac_id: "<%= @practice.id %>",
          language: lang
        },
        success: function(response){
          resp = response["response"]["statement"];
          if(resp == "default"){
          switch (lang) {
            case "python":
              //editor.setOption("value",js);
              editor.setOption("value", pcode);
              result.setOption("value","Your result appears here");
              flag = true;
              break;
            case "javascript":
              editor.setOption("value", jcode);
              result.setOption("value","Your result appears here");
              flag = true;
              break;
            default:
              //editor.setOption("value",js);
              editor.setOption("value",rcode);
              result.setOption("value","Your result appears here");
              flag = true;
              break;
          }
        }else{
          switch (lang) {
            case "python":
              editor.setOption("value",js);
              editor.setOption("value",resp);
              result.setOption("value","Your result appears here");
              pid = response["response"]["id"];
              web = "/submissions/" + pid;
              flag = false;
              break;
            case "javascript":
              editor.setOption("value",resp);
              jsid = response["response"]["id"];
              result.setOption("value","Your result appears here");
              web = "/submissions/" + jsid;
              flag = false;
              break;
            default:
              editor.setOption("value",js);
              editor.setOption("value",resp);
              result.setOption("value","Your result appears here");
              rid = response["response"]["id"];
              web = "/submissions/" + rid;
              flag = false;
              break;
            }
            // editor.setOption("mode","text");
            // editor.setOption("readOnly","nocursor");
        }
          editor.setOption("mode",lang);
        }
      });
    };


    $("#load").click(function(){
        var sent = editor.getValue();
        if(sent == js || sent == pythoncon || sent == rubycon){
          swal(
            'Ooops...!!!',
            "Looks like you din't type in any code.",
            'error'
          )
        }else{
          switch (lang) {
            case "python":
              pcode = sent;
              break;
            case "javascript":
              jcode = sent;
              break;
            default:
              rcode = sent;
              break;
          }
        <% if (@practice.assignment_group.due_datetime >= Time.now) && !(@practice.submissions.where('user_id = ?', current_user.id).count > 0)%>
            ajaxForPlayBack();
        <% end %>
        $.ajax({
          url: "<%= home_input_path %>",
          type: "get",
          data: {
            content: sent,
            extension: lang
          },
          success: function(response){
            result.setOption("value", response["response"]);
          }
        });
      }
    });

    $("#sub").click(function(){
      $("#sub").prop('disabled');
      var sent = editor.getValue();
      var out = result.getValue();
      var args = {};
      args["user_id"] = "<%= current_user.id %>";
      args["statement"] = sent;
      args["output"] = out;
      args["assignment_id"] = "<%= @assignment.id %>";
      args["practice_id"] = "<%= @practice.id %>";
      args["language"] = lang;
      if(sent == js || sent == pythoncon || sent == rubycon || out == "Your result appears here"){
        swal(
          'Ooops...!!!',
          'You must execute before you submit your code.',
          'error'
        )
        $("#sub").removeAttr('disabled');
      }else{
        $('#sub').hide();
        $('#comments').show();
        if(flag){
          args["time_in_seconds"] = countUp;
        $.ajax({
          url: "<%= submissions_path %>",
          type: "post",
          data: {
            submission: args
          },
          success: function(response){
            swal(
              'Success',
              'Your code was submitted successfully.',
              'success'
            )
            id = response["id"];
            web = "/submissions/" + id;
            flag = false;
          }
        });
        $("#sub").removeAttr('disabled');
        clearInterval(countUpRef);
        document.querySelector('#display').innerHTML = `You took ${formatTime(args["time_in_seconds"])} to solve`;
       ajaxForPlayBack();
      }else{
        $.ajax({
          url: web,
          type: "patch",
          data: {
            submission: args
          },
          success: function(response){
            swal(
              'Success',
              'Your code was updated successfully.',
              'success'
            )
          }
        });
      }
      $("#sub").removeAttr('disabled');
    }
  });

  $("#reset").click(function(){
        swal({
      title: 'Are you sure?',
      text: "You won't be able to revert this!",
      type: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, reset it!'
    }).then(function () {
      $("#sel").prop('selectedIndex',0);
      editor.setOption("value",js);
      editor.setOption("value",rubycon);
      result.setOption("value","Your result appears here");
      swal(
        'Reset!',
        'Your Work Has Been Reset.',
        'success'
      )
    },function(dismiss){
      if(dismiss === "cancel"){
        swal(
          'Cancelled'
        )
      }
    }
  )
  });


  // set theme 
  <% if !current_user.editor_setting.nil? %>
  $('#theme').val("<%= current_user.editor_setting.theme_css %>");
  editor.setOption('theme', '<%= current_user.editor_setting.theme_css %>');
    $('<link>',{
      rel: 'stylesheet',
      href: '/stylesheets/' + '<%= current_user.editor_setting.theme_css %>' + '.css',
    }).appendTo($('body'));
  <% end %>

  function ajaxForPlayBack(){
    $.ajax({
      url: '/code_play_backs',
      type: 'POST',
      data: {
        code_play_back: {
          practice_id: <%= @practice.id %>,
          statement: editor.getValue()
        }
      }
    });
  }

  <% if (@practice.assignment_group.due_datetime >= Time.now) && !(@practice.submissions.where('user_id = ?', current_user.id).count > 0)%>
    var keyStrokeCountPlayBack = 0;
    $('#text').on('keyup',function(){
      if(keyStrokeCountPlayBack > 10){
        ajaxForPlayBack();
        keyStrokeCountPlayBack = 0;
      } 
      keyStrokeCountPlayBack++;
    });
  <% end %>


});//end of document
</script>
